app.js 
import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createDrawerNavigator } from '@react-navigation/drawer';
import Icon from 'react-native-vector-icons/FontAwesome';
import RegisterScreen from './RegisterScreen'; // Assuming these components are defined elsewhere
import EmployeeRecordForm from './EmployeeRecordForm';
import EmployeeList from './EmployeeList';
import SalarySlip from './Salaryslip';
import AttendanceMark from './AttendanceMark';
import SearchRecord from './SearchRecord';

const Drawer = createDrawerNavigator();

const renderScreen = (ScreenComponent) => {
  return <ScreenComponent />; // Render the passed screen component
};

const HomeScreen = ({ navigation }) => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Welcome to the Employee Management App!</Text>
      <View style={styles.buttonContainer}>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('RegisterScreen')}>
          <Icon name="user-plus" size={20} color="white" />
          <Text style={styles.buttonText}>Register Employee</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('EmployeeRecordForm')}>
          <Icon name="address-book" size={20} color="white" />
          <Text style={styles.buttonText}>Employee Record Form</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.buttonContainer}>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SearchRecord')}>
          <Icon name="Search" size={20} color="white" />
          <Text style={styles.buttonText}>Search</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('AttendanceMark')}>
          <Icon name="calendar-check-o" size={20} color="white" />
          <Text style={styles.buttonText}>Mark Attendance</Text>
        </TouchableOpacity>
      </View>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SalarySlip')}>
        <Icon name="money" size={20} color="white" />
        <Text style={styles.buttonText}>Salary Slip</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('EmployeeList')}>
        <Icon name="list" size={20} color="white" />
        <Text style={styles.buttonText}>Employee List</Text>
      </TouchableOpacity>
    </View>
  );
}; 

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  buttonContainer: {
    flexDirection: 'row',
    marginBottom: 10,
  },
  button: {
    backgroundColor: '#4CAF50',
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 10, // decrease padding vertically
    paddingHorizontal: 15, // decrease padding horizontally
    borderRadius: 5,
    marginBottom: 10,
    marginRight: 10,
    width: 120, // decrease width of the button
  },
  buttonText: {
    color: 'white',
    fontSize: 14, // decrease font size
    marginLeft: 5, // decrease margin
  },
});

const App = () => {
  return (
    <NavigationContainer>
      <Drawer.Navigator initialRouteName="Home">
        <Drawer.Screen name="Home" component={HomeScreen} />
        <Drawer.Screen name="RegisterScreen" component={RegisterScreen} />
        <Drawer.Screen name="EmployeeRecordForm" component={EmployeeRecordForm} />
        <Drawer.Screen name="EmployeeList" component={EmployeeList} />
        <Drawer.Screen name="SalarySlip" component={SalarySlip} />
        <Drawer.Screen name="AttendanceMark" component={AttendanceMark} />
        <Drawer.Screen name="SearchRecord" component={SearchRecord} />
      </Drawer.Navigator>
    </NavigationContainer>
  );
};

export default App;

_________________________________
searchrecord.js

import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, ScrollView } from 'react-native';
import { doc, getDoc } from "firebase/firestore"; 
import { db } from './config';

const SearchRecord = () => {
  const [employeeID, setEmployeeID] = useState('');
  const [fullName, setFullName] = useState('');
  const [cnic, setCnic] = useState('');
  const [joiningDate, setJoiningDate] = useState('');
  const [mobileNo, setMobileNo] = useState('');
  const [address, setAddress] = useState('');
  const [dailyPay, setDailyPay] = useState('');

  const handleButtonPress = () => {
    // Search Record
    getDoc(doc(db, "employee", employeeID))
      .then((docData) => {
        if (docData.exists()) {
          const data = docData.data();
          setFullName(data.fullName);
          setCnic(data.cnic);
          setJoiningDate(data.joiningDate);
          setMobileNo(data.mobileNo);
          setAddress(data.address);
          setDailyPay(data.dailyPay);
        } else {
          console.log("No such employeeID exists");
          // Reset fields if no record found
          setFullName('');
          setCnic('');
          setJoiningDate('');
          setMobileNo('');
          setAddress('');
          setDailyPay('');
        }
      })
      .catch((error) => {
        console.log(error);
      });
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.heading}>Search Record</Text>
      <TextInput
        style={styles.input}
        placeholder="Employee ID"
        value={employeeID}
        onChangeText={setEmployeeID}              
      />
      <Text style={styles.label}>Full Name: {fullName}</Text>
      <Text style={styles.label}>CNIC: {cnic}</Text>
      <Text style={styles.label}>Joining Date: {joiningDate}</Text>
      <Text style={styles.label}>Mobile No: {mobileNo}</Text>
      <Text style={styles.label}>Address: {address}</Text>
      <Text style={styles.label}>Daily Pay: {dailyPay}</Text>
     
      <Button
        title="Search"
        onPress={handleButtonPress}
      />
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#0D1B2A', // Set background color
    paddingVertical: 20,
    paddingHorizontal: 30,
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#22b8cf', // Change text color
  },
  input: {
    height: 40,
    width: '100%',
    borderWidth: 1,
    borderColor: '#ccc',
    marginBottom: 20,
    paddingHorizontal: 10,
    backgroundColor: '#fff', // Set background color
  },
  label: {
    fontSize: 16,
    marginBottom: 10,
    color: '#fff', // Change text color
  },
});

export default SearchRecord;
--______________________________________-
salaryslip.js
import React, { useState, useEffect } from 'react';
import { Text, View, TextInput, Button, StyleSheet } from 'react-native';
import { doc, getDoc } from "firebase/firestore"; 
import { db } from './config'; // Add your Firebase configuration file

const SalarySlip = () => {
  const [employeeID, setEmployeeID] = useState('');
  const [employeeData, setEmployeeData] = useState(null);

  const fetchEmployeeData = async () => {
    try {
      const employeeDocRef = doc(db, "employee", employeeID);
      const docSnap = await getDoc(employeeDocRef);
      if (docSnap.exists()) {
        setEmployeeData(docSnap.data());
      } else {
        console.log("No such document!");
      }
    } catch (error) {
      console.error("Error fetching employee data:", error);
    }
  };

  const handleSearch = () => {
    fetchEmployeeData();
  };

  return (
    <View style={styles.container}>
      <Text style={styles.heading}>Search for Employee Salary Slip</Text>
      <TextInput
        style={styles.input}
        placeholder="Enter Employee ID"
        value={employeeID}
        onChangeText={setEmployeeID}
      />
      <Button
        title="Search"
        onPress={handleSearch}
      />
      {employeeData && (
        <View style={styles.salaryReport}>
          <Text style={styles.employeeID}>Employee ID: {employeeID}</Text>
          <Text style={styles.reportHeading}>Salary Report</Text>
          <Text style={styles.salaryItem}>
            Total Monthly Salary: {parseFloat(employeeData.dailyPay) * 30}
          </Text>
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#fff',
    padding: 20,
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input: {
    height: 40,
    width: '80%',
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    paddingHorizontal: 10,
    marginBottom: 20,
  },
  salaryReport: {
    marginTop: 20,
    alignItems: 'center',
  },
  employeeID: {
    fontSize: 18,
    marginBottom: 10,
  },
  reportHeading: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  salaryItem: {
    fontSize: 16,
    marginBottom: 5,
  },
});

export default SalarySlip;

import React, { useState } from 'react';
import { auth } from './firebase.js'; // Import auth from firebase.js
import { MaterialCommunityIcons } from 'react-native-vector-icons';
import { createUserWithEmailAndPassword } from 'firebase/auth';
import { View, Text, TextInput, Button, TouchableOpacity, StyleSheet, Alert } from 'react-native';

const RegisterScreen = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [name, setName] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);

  const handleRegister = () => {
    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        Alert.alert("Message", "Successfully created user with email and password.");
        // Add navigation logic here
      })
      .catch((error) => {
        console.log(error.message);
      });
  };

  return (
    <View style={styles.container}>
      <View style={styles.formContainer}>
        <Text style={styles.title}>Register</Text>
        <View style={styles.inputContainer}>
          <MaterialCommunityIcons name="email-outline" size={20} color="#888" />
          <TextInput
            style={styles.input}
            placeholder="Email"
            keyboardType="email-address"
            autoCapitalize="none"
            onChangeText={setEmail}
            value={email}
          />
        </View>
        <View style={styles.inputContainer}>
          <MaterialCommunityIcons name="lock-outline" size={20} color="#888" />
          <TextInput
            style={styles.input}
            placeholder="Password"
            secureTextEntry={!showPassword}
            onChangeText={setPassword}
            value={password}
          />
          <TouchableOpacity onPress={() => setShowPassword(!showPassword)}>
            <MaterialCommunityIcons name={showPassword ? "eye-off-outline" : "eye-outline"} size={20} color="#888" />
          </TouchableOpacity>
        </View>
        <Button title="Register" onPress={handleRegister} />
        {errorMessage ? <Text style={styles.errorMessage}>{errorMessage}</Text> : null}
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#0D1B2A',
  },
  formContainer: {
    backgroundColor: '#FFFFFF',
    padding: 20,
    borderRadius: 10,
    width: '80%',
  },
  title: {
    fontSize: 32,
    marginBottom: 20,
    textAlign: 'center',
    color: '#023047',
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
  input: {
    flex: 1,
    height: 40,
    paddingVertical: 10,
    color: '#000000',
  },
  errorMessage: {
    color: 'red',
    marginTop: 10,
    textAlign: 'center',
  },
});

export default RegisterScreen
==_______________________
import { initializeApp } from 'firebase/app'; // add
import { getAuth } from 'firebase/auth'; // add
import { getFirestore } from 'firebase/firestore'; 

// Your Firebase configuration object
const firebaseConfig = {
  apiKey: "AIzaSyCHPdBCzyyZxV6PNht18lolrQAM55ivlFE",
  authDomain: "employeems-bb71e.firebaseapp.com",
  projectId: "employeems-bb71e",
  storageBucket: "employeems-bb71e.appspot.com",
  messagingSenderId: "197617881240",
  appId: "1:197617881240:web:b0436403f81fc0b890c0ed"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
// Get the Firebase authentication and Firestore database instances
const auth = getAuth(app); // add
const database = getFirestore(app); // add

// Export the Firebase authentication and Firestore database instances
export { auth, database }; //add

________________________________________


employeerecord.js

import React, { useState } from 'react';
import { Text, View, TextInput, Button, StyleSheet, ScrollView } from 'react-native';
import { doc, setDoc, updateDoc, deleteDoc, getDoc } from "firebase/firestore"; 
import { db } from './config'; // Add your Firebase configuration file
import Icon from 'react-native-vector-icons/FontAwesome';

const App = () => {
  const [fullName, setFullName] = useState('');
  const [cnic, setCnic] = useState('');
  const [joiningDate, setJoiningDate] = useState('');
  const [mobileNo, setMobileNo] = useState('');
  const [address, setAddress] = useState('');
  const [dailyPay, setDailyPay] = useState('');
  const [employeeID, setEmployeeID] = useState('');
  
  const handleAddRecord = () => {
    // Add Record to Firestore
    setDoc(doc(db, "employee", employeeID), {
      fullName: fullName,
      cnic: cnic,
      joiningDate: joiningDate,
      mobileNo: mobileNo,
      address: address,
      dailyPay: dailyPay,
    }).then(() => {
      console.log("Added");
      // Reset form fields after submission
      setFullName('');
      setCnic('');
      setJoiningDate('');
      setMobileNo('');
      setAddress('');
      setDailyPay('');
      setEmployeeID('');
    }).catch((error) => {
      console.log(error);
    });
  };

  const handleUpdateRecord = async () => {
    // Update Record in Firestore
    const employeeDocRef = doc(db, "employee", employeeID);
    const employeeDoc = await getDoc(employeeDocRef);
    if (employeeDoc.exists()) {
      await updateDoc(employeeDocRef, {
        fullName: fullName,
        cnic: cnic,
        joiningDate: joiningDate,
        mobileNo: mobileNo,
        address: address,
        dailyPay: dailyPay,
      });
      console.log("Updated");
    } else {
      console.log("Document does not exist");
    }
  };

  const handleDeleteRecord = async () => {
    // Delete Record from Firestore
    const employeeDocRef = doc(db, "employee", employeeID);
    await deleteDoc(employeeDocRef);
    console.log("Deleted");
    // Reset form fields after deletion
    setFullName('');
    setCnic('');
    setJoiningDate('');
    setMobileNo('');
    setAddress('');
    setDailyPay('');
    setEmployeeID('');
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.heading}>Employee Record</Text>
      <View style={styles.inputContainer}>
        <Icon name="user" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Full Name"
          value={fullName}
          onChangeText={setFullName}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="id-card" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="CNIC/Employee Card"
          value={cnic}
          onChangeText={setCnic}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="calendar" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Joining Date"
          value={joiningDate}
          onChangeText={setJoiningDate}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="phone" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Mobile No"
          value={mobileNo}
          onChangeText={setMobileNo}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="address-card" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Address"
          value={address}
          onChangeText={setAddress}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="dollar" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Daily Pay"
          value={dailyPay}
          onChangeText={setDailyPay}              
        />
      </View>
      <View style={styles.inputContainer}>
        <Icon name="id-badge" size={20} color="#999" style={styles.icon} />
        <TextInput
          style={styles.input}
          placeholder="Employee ID"
          value={employeeID}
          onChangeText={setEmployeeID}              
        />
      </View>
      <View style={styles.buttonContainer}>
        <Button
          title="Add Record"
          onPress={handleAddRecord}
          color="#22b8cf" // Set button color
        />
      </View>
      <View style={styles.buttonContainer}>
        <Button
          title="Update Record"
          onPress={handleUpdateRecord}
          color="#22b8cf" // Set button color
        />
      </View>
      <View style={styles.buttonContainer}>
        <Button
          title="Delete Record"
          onPress={handleDeleteRecord}
          color="#eb4034" // Set button color
        />
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#0D1B2A', // Set background color
    paddingVertical: 20,
    paddingHorizontal: 30,
  },
  heading: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: '#22b8cf', // Change text color
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
  },
  input: {
    height: 40,
    flex: 1,
    borderWidth: 1,
    borderColor: '#ccc', // Change border color
    borderRadius: 5,
    paddingHorizontal: 10,
    backgroundColor: '#fff', // Set background color
  },
  icon: {
    marginRight: 10,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'center', // Center the buttons horizontally
    width: '100%',
    marginBottom: 10,
  },
});

export default App;



// EmployeeListScreen.js

import React, { useState, useEffect } from 'react';
import { View, Text, FlatList, StyleSheet } from 'react-native';
import { db } from './config'; // Import your Firebase configuration

const EmployeeListScreen = () => {
  const [employeeData, setEmployeeData] = useState([]);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchEmployeeData = async () => {
      try {
        const querySnapshot = await db.collection('employee').get();
        const employees = querySnapshot.docs.map(doc => doc.data());
        setEmployeeData(employees);
      } catch (error) {
        console.error('Error fetching employee data:', error);
        setError('Error fetching employee data. Please try again later.');
      }
    };

    fetchEmployeeData();
  }, []);

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Employee List</Text>
      {error ? (
        <Text style={styles.error}>{error}</Text>
      ) : (
        <FlatList
          data={employeeData}
          keyExtractor={(item, index) => index.toString()}
          renderItem={({ item }) => (
            <View style={styles.employeeContainer}>
              <Text style={styles.name}>{item.fullName}</Text>
              <Text style={styles.detail}>CNIC: {item.cnic}</Text>
              <Text style={styles.detail}>Joining Date: {item.joiningDate}</Text>
              <Text style={styles.detail}>Mobile No: {item.mobileNo}</Text>
              <Text style={styles.detail}>Address: {item.address}</Text>
              <Text style={styles.detail}>Daily Pay: {item.dailyPay}</Text>
              <Text style={styles.detail}>Employee ID: {item.employeeID}</Text>
            </View>
          )}
        />
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    paddingHorizontal: 20,
    paddingTop: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  employeeContainer: {
    marginBottom: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
    paddingBottom: 10,
  },
  name: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 5,
  },
  detail: {
    fontSize: 16,
  },
  error: {
    fontSize: 18,
    color: 'red',
    textAlign: 'center',
  },
});

export default EmployeeListScreen;




import React, { useState } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, TextInput } from 'react-native';
import { RadioButton } from 'react-native-paper'; // Assuming you have 'react-native-paper' installed

const AttendanceMark = ({ markAttendance }) => {
  const [employeeID, setEmployeeID] = useState('');
  const [employeeName, setEmployeeName] = useState('');
  const [attendanceOption, setAttendanceOption] = useState('Present');
  const [message, setMessage] = useState('');

  const handleAttendanceMark = () => {
    markAttendance(employeeID, attendanceOption);
    setMessage('Attendance marked: ' + attendanceOption);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.heading}>Mark Attendance</Text>
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          placeholder="Employee ID"
          value={employeeID}
          onChangeText={setEmployeeID}
        />
      </View>
      <View style={styles.inputContainer}>
        <TextInput
          style={styles.input}
          placeholder="Employee Name"
          value={employeeName}
          onChangeText={setEmployeeName}
        />
      </View>
      <View style={styles.radioContainer}>
        <RadioButton.Group onValueChange={newValue => setAttendanceOption(newValue)} value={attendanceOption}>
          <View style={styles.radioButton}>
            <RadioButton value="Present" />
            <Text style={styles.radioText}>Present</Text>
          </View>
          <View style={styles.radioButton}>
            <RadioButton value="Absent" />
            <Text style={styles.radioText}>Absent</Text>
          </View>
          <View style={styles.radioButton}>
            <RadioButton value="Half Day" />
            <Text style={styles.radioText}>Half Day</Text>
          </View>
          <View style={styles.radioButton}>
            <RadioButton value="Double" />
            <Text style={styles.radioText}>Double</Text>
          </View>
          <View style={styles.radioButton}>
            <RadioButton value="Overtime" />
            <Text style={styles.radioText}>Overtime</Text>
          </View>
          <View style={styles.radioButton}>
            <RadioButton value="Paid Leave" />
            <Text style={styles.radioText}>Paid Leave</Text>
          </View>
        </RadioButton.Group>
      </View>
      <TouchableOpacity onPress={handleAttendanceMark} style={styles.button}>
        <Text style={styles.buttonText}>Submit</Text>
      </TouchableOpacity>
      {message ? <Text style={styles.message}>{message}</Text> : null}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    marginBottom: 20,
  },
  heading: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 10,
  },
  inputContainer: {
    marginBottom: 10,
  },
  input: {
    height: 40,
    width: '100%',
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 5,
    paddingHorizontal: 10,
  },
  radioContainer: {
    marginBottom: 10,
  },
  radioButton: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  radioText: {
    fontSize: 14,
    color: '#333',
  },
  button: {
    backgroundColor: '#22b8cf',
    paddingVertical: 8,
    paddingHorizontal: 15,
    borderRadius: 5,
  },
  buttonText: {
    color: '#fff',
    fontSize: 14,
  },
  message: {
    color: 'green',
    marginTop: 10,
  },
});

export default AttendanceMark;



import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createDrawerNavigator } from '@react-navigation/drawer';
import Icon from 'react-native-vector-icons/FontAwesome';
import RegisterScreen from './RegisterScreen'; // Assuming these components are defined elsewhere
import EmployeeRecordForm from './EmployeeRecordForm';
import EmployeeList from './EmployeeList';
import SalarySlip from './Salaryslip';
import AttendanceMark from './AttendanceMark';
import SearchRecord from './SearchRecord';

const Drawer = createDrawerNavigator();

const renderScreen = (ScreenComponent) => {
  return <ScreenComponent />; // Render the passed screen component
};

const HomeScreen = ({ navigation }) => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Welcome to the Employee Management App!</Text>
      <View style={styles.buttonContainer}>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('RegisterScreen')}>
          <Icon name="user-plus" size={20} color="white" />
          <Text style={styles.buttonText}>Register Employee</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('EmployeeRecordForm')}>
          <Icon name="address-book" size={20} color="white" />
          <Text style={styles.buttonText}>Employee Record Form</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.buttonContainer}>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SearchRecord')}>
          <Icon name="Search" size={20} color="white" />
          <Text style={styles.buttonText}>Search</Text>
        </TouchableOpacity>
        <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('AttendanceMark')}>
          <Icon name="calendar-check-o" size={20} color="white" />
          <Text style={styles.buttonText}>Mark Attendance</Text>
        </TouchableOpacity>
      </View>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SalarySlip')}>
        <Icon name="money" size={20} color="white" />
        <Text style={styles.buttonText}>Salary Slip</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('EmployeeList')}>
        <Icon name="list" size={20} color="white" />
        <Text style={styles.buttonText}>Employee List</Text>
      </TouchableOpacity>
    </View>
  );
}; 

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  buttonContainer: {
    flexDirection: 'row',
    marginBottom: 10,
  },
  button: {
    backgroundColor: '#4CAF50',
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 10, // decrease padding vertically
    paddingHorizontal: 15, // decrease padding horizontally
    borderRadius: 5,
    marginBottom: 10,
    marginRight: 10,
    width: 120, // decrease width of the button
  },
  buttonText: {
    color: 'white',
    fontSize: 14, // decrease font size
    marginLeft: 5, // decrease margin
  },
});

const App = () => {
  return (
    <NavigationContainer>
      <Drawer.Navigator initialRouteName="Home">
        <Drawer.Screen name="Home" component={HomeScreen} />
        <Drawer.Screen name="RegisterScreen" component={RegisterScreen} />
        <Drawer.Screen name="EmployeeRecordForm" component={EmployeeRecordForm} />
        <Drawer.Screen name="EmployeeList" component={EmployeeList} />
        <Drawer.Screen name="SalarySlip" component={SalarySlip} />
        <Drawer.Screen name="AttendanceMark" component={AttendanceMark} />
        <Drawer.Screen name="SearchRecord" component={SearchRecord} />
      </Drawer.Navigator>
    </NavigationContainer>
  );
};

export default App;

























